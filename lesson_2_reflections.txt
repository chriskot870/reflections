What happens when you initialize a repository? Why do you need to do it?

	A .git directory is created. This directory contains meta-data to track
	the hidtory of the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area contains files that are in the working directory but
	marked to be placed into the repository in a future commit.
	It allows a way to select which files in the working directory will
	also be in the repository. Not all files in the working directory
	need to be in the repository.

How can you use the staging area to make sure you have one commit per logical
change?

	Only add files to staging area that correcpond to the logical change in
	the working directory.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When trying new features or support for different languages. Branches
	allow you to make changes that won;t chnage the currently working branch
	So you can experiment without fear of breaking what is already working.

How do the diagrams help you visualize the branch structure?

	They help to understand "reachability" so that you can identify which
	commits are on any given branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The commits made on the merged branch become part of the branch that
	is being merged to. They are listed in timestamp order. By representing
	them in a diagram it is clearer to see the reachability and parents.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

